[nitpick.files.absent]
"requirements.txt" = "Install poetry, run 'poetry init' to create pyproject.toml, and move dependencies to it"
"Pipfile"        = "Use pyproject.toml instead"
"Pipfile.lock"   = "Use pyproject.toml instead"

".isort.cfg" = "Move values to setup.cfg, section [isort]"
".flake8"  = "Move values to setup.cfg, section [flake8]"
"mypy.ini" = "Move values to setup.cfg, section [mypy]"

[nitpick.files.present]
"README.md"  = "The project must have `README.md`"
"CHANGELOG.md" = "The project must have `CHANGELOG.md`. See the style guide for the default."

"poetry.lock" = "The project needs a poetry.lock file for CI/CD to run. Run `poetry install/update` to generate and ensure it is committed"

"tox.ini" = "The project must have `tox.ini` file. See the style guide for an example."

".editorconfig" = "The project must have an .editorconfig. See the style guide for the default."
".gitignore"  = "The project must have `.gitignore` file. See the style guide for the default."

".pre-commit-config.yaml" = "Create the file with the contents below, then run 'pre-commit install'"
".releaserc.yaml"       = "Create the semantic-release config file to allow automatic releases. See the style guide for the default."

".github/workflows/push.yaml"       = "Add a Github Actions workflow for pushes to master and develop called `push.yaml`. See the style guide for the default."
".github/workflows/pull-request.yaml" = "Add a Github Actions workflow for pull requests to master and develop called `pull-request.yaml`. See the style guide for the default."
".github/workflows/release.yaml"    = "Add a Github Actions workflow for wheel building on code release called `release.yaml`. See the style guide for the default."
